
package fileclient.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSFileServer", targetNamespace = "http://fileserver/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSFileServer {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws UserPermissionException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mkdir", targetNamespace = "http://fileserver/", className = "fileclient.ws.Mkdir")
    @ResponseWrapper(localName = "mkdirResponse", targetNamespace = "http://fileserver/", className = "fileclient.ws.MkdirResponse")
    @Action(input = "http://fileserver/WSFileServer/mkdirRequest", output = "http://fileserver/WSFileServer/mkdirResponse", fault = {
        @FaultAction(className = UserPermissionException_Exception.class, value = "http://fileserver/WSFileServer/mkdir/Fault/UserPermissionException")
    })
    public boolean mkdir(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws UserPermissionException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws UserPermissionException_Exception
     * @throws InfoNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "dir", targetNamespace = "http://fileserver/", className = "fileclient.ws.Dir")
    @ResponseWrapper(localName = "dirResponse", targetNamespace = "http://fileserver/", className = "fileclient.ws.DirResponse")
    @Action(input = "http://fileserver/WSFileServer/dirRequest", output = "http://fileserver/WSFileServer/dirResponse", fault = {
        @FaultAction(className = InfoNotFoundException_Exception.class, value = "http://fileserver/WSFileServer/dir/Fault/InfoNotFoundException"),
        @FaultAction(className = UserPermissionException_Exception.class, value = "http://fileserver/WSFileServer/dir/Fault/UserPermissionException")
    })
    public List<String> dir(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws InfoNotFoundException_Exception, UserPermissionException_Exception
    ;

    /**
     * 
     * @return
     *     returns fileclient.ws.WsFileServerInfo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getServerInfo", targetNamespace = "http://fileserver/", className = "fileclient.ws.GetServerInfo")
    @ResponseWrapper(localName = "getServerInfoResponse", targetNamespace = "http://fileserver/", className = "fileclient.ws.GetServerInfoResponse")
    @Action(input = "http://fileserver/WSFileServer/getServerInfoRequest", output = "http://fileserver/WSFileServer/getServerInfoResponse")
    public WsFileServerInfo getServerInfo();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addPermission", targetNamespace = "http://fileserver/", className = "fileclient.ws.AddPermission")
    @ResponseWrapper(localName = "addPermissionResponse", targetNamespace = "http://fileserver/", className = "fileclient.ws.AddPermissionResponse")
    @Action(input = "http://fileserver/WSFileServer/addPermissionRequest", output = "http://fileserver/WSFileServer/addPermissionResponse")
    public void addPermission(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "removePermission", targetNamespace = "http://fileserver/", className = "fileclient.ws.RemovePermission")
    @ResponseWrapper(localName = "removePermissionResponse", targetNamespace = "http://fileserver/", className = "fileclient.ws.RemovePermissionResponse")
    @Action(input = "http://fileserver/WSFileServer/removePermissionRequest", output = "http://fileserver/WSFileServer/removePermissionResponse")
    public void removePermission(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns fileclient.ws.FileInfo
     * @throws UserPermissionException_Exception
     * @throws InfoNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileInfo", targetNamespace = "http://fileserver/", className = "fileclient.ws.GetFileInfo")
    @ResponseWrapper(localName = "getFileInfoResponse", targetNamespace = "http://fileserver/", className = "fileclient.ws.GetFileInfoResponse")
    @Action(input = "http://fileserver/WSFileServer/getFileInfoRequest", output = "http://fileserver/WSFileServer/getFileInfoResponse", fault = {
        @FaultAction(className = InfoNotFoundException_Exception.class, value = "http://fileserver/WSFileServer/getFileInfo/Fault/InfoNotFoundException"),
        @FaultAction(className = UserPermissionException_Exception.class, value = "http://fileserver/WSFileServer/getFileInfo/Fault/UserPermissionException")
    })
    public FileInfo getFileInfo(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws InfoNotFoundException_Exception, UserPermissionException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns byte[]
     * @throws UserPermissionException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "downloadFile", targetNamespace = "http://fileserver/", className = "fileclient.ws.DownloadFile")
    @ResponseWrapper(localName = "downloadFileResponse", targetNamespace = "http://fileserver/", className = "fileclient.ws.DownloadFileResponse")
    @Action(input = "http://fileserver/WSFileServer/downloadFileRequest", output = "http://fileserver/WSFileServer/downloadFileResponse", fault = {
        @FaultAction(className = UserPermissionException_Exception.class, value = "http://fileserver/WSFileServer/downloadFile/Fault/UserPermissionException")
    })
    public byte[] downloadFile(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws UserPermissionException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws UserPermissionException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "uploadFile", targetNamespace = "http://fileserver/", className = "fileclient.ws.UploadFile")
    @ResponseWrapper(localName = "uploadFileResponse", targetNamespace = "http://fileserver/", className = "fileclient.ws.UploadFileResponse")
    @Action(input = "http://fileserver/WSFileServer/uploadFileRequest", output = "http://fileserver/WSFileServer/uploadFileResponse", fault = {
        @FaultAction(className = UserPermissionException_Exception.class, value = "http://fileserver/WSFileServer/uploadFile/Fault/UserPermissionException")
    })
    public boolean uploadFile(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        byte[] arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2)
        throws UserPermissionException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws UserPermissionException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rmdir", targetNamespace = "http://fileserver/", className = "fileclient.ws.Rmdir")
    @ResponseWrapper(localName = "rmdirResponse", targetNamespace = "http://fileserver/", className = "fileclient.ws.RmdirResponse")
    @Action(input = "http://fileserver/WSFileServer/rmdirRequest", output = "http://fileserver/WSFileServer/rmdirResponse", fault = {
        @FaultAction(className = UserPermissionException_Exception.class, value = "http://fileserver/WSFileServer/rmdir/Fault/UserPermissionException")
    })
    public boolean rmdir(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws UserPermissionException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws UserPermissionException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rm", targetNamespace = "http://fileserver/", className = "fileclient.ws.Rm")
    @ResponseWrapper(localName = "rmResponse", targetNamespace = "http://fileserver/", className = "fileclient.ws.RmResponse")
    @Action(input = "http://fileserver/WSFileServer/rmRequest", output = "http://fileserver/WSFileServer/rmResponse", fault = {
        @FaultAction(className = UserPermissionException_Exception.class, value = "http://fileserver/WSFileServer/rm/Fault/UserPermissionException")
    })
    public boolean rm(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws UserPermissionException_Exception
    ;

}
